[{"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/index.js":"1","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/App.js":"2","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/serviceWorker.js":"3","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/creds.js":"4","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Register/RegisterFormik.js":"5","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Dashboard/Dashboard.js":"6","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Register/Register.js":"7","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Signin/Signin.js":"8","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Navigation/Navigation.js":"9","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Rank/Rank.js":"10","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Logo/Logo.js":"11","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/FaceRecognition/FaceRecognition.js":"12","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/ImageLinkForm/ImageLinkForm.js":"13"},{"size":547,"mtime":1616938997000,"results":"14","hashOfConfig":"15"},{"size":7211,"mtime":1616938688455,"results":"16","hashOfConfig":"15"},{"size":5086,"mtime":499182300000,"results":"17","hashOfConfig":"15"},{"size":109,"mtime":1616934371429,"results":"18","hashOfConfig":"15"},{"size":4310,"mtime":1610722309757,"results":"19","hashOfConfig":"15"},{"size":626,"mtime":1610644416642,"results":"20","hashOfConfig":"15"},{"size":4037,"mtime":1616940409018,"results":"21","hashOfConfig":"15"},{"size":4191,"mtime":1610704839922,"results":"22","hashOfConfig":"15"},{"size":1164,"mtime":1610522736558,"results":"23","hashOfConfig":"15"},{"size":357,"mtime":1606677234994,"results":"24","hashOfConfig":"15"},{"size":445,"mtime":1600688596000,"results":"25","hashOfConfig":"15"},{"size":1323,"mtime":1616930465058,"results":"26","hashOfConfig":"15"},{"size":826,"mtime":1610645841927,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1pypqzp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/index.js",[],["57","58"],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/App.js",["59"],"import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Credentials from './creds';\nimport RegisterFormik from './components/Register/RegisterFormik';\n\nconst app = new Clarifai.App({\n  apiKey: Credentials.CLARIFAI_API_KEY\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes:[],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\n// TODO: Migrate to Redux\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      // Changing to array for multiple faces\n      boxes:[],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  // Function for loading user\n  loadUser = (loadingUser) => {\n    this.setState({\n      user: {\n        id: loadingUser.id,\n        name: loadingUser.name,\n        email: loadingUser.email,\n        entries: loadingUser.entries,\n        joined: loadingUser.joined\n      }\n    })\n  }\n\n  // Connecting frontend to the backend\n  componentDidMount() {\n    fetch('http://localhost:3000/')\n      .then(response => response.json())\n      .then(data => console.log(data))\n      // .then(console.log)  //same as above\n  }\n\n  // Calculates location of all the faces present in the image\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    const regions = data.outputs[0].data.regions;\n    const boxes = regions.map((region) => {\n      const face = region.region_info.bounding_box;\n      return{\n        leftCol: face.left_col * width,\n        topRow: face.top_row * height,\n        rightCol: width - (face.right_col * width),\n        bottomRow: height - (face.bottom_row * height)\n      }\n    });\n\n    // Multiple Face\n    // Array containing face locations object of all faces\n    return boxes;\n\n  }\n\n  displayFaceBox = (boxes) => {\n    console.log(boxes);\n    const newBoxes = JSON.parse(JSON.stringify(boxes));\n    // For multiple faces\n    this.setState({boxes: newBoxes});\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      input: event.target.value,\n      imageUrl: event.target.value,\n      boxes: []\n    });\n  }\n\n  // Function to fetch image from a file input field\n  // TODO: Need to modify this.state according to the file input\n  getFileInput = (event) => {\n    const filePath = event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(filePath);\n    \n    fileReader.onload = (e) => {\n      console.log(e.target.result);\n      this.setState({\n        input: e.target.result,     // TODO: This doesn't work with current API Integration, Update to Clarifai Data Mode\n        imageUrl: e.target.result,\n        boxes:[]\n      })\n    }\n  }\n\n  onImageSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        //Here instead of ImageUrl, input is passed as it would give an error and it is an advanced topic about the way setState works\n        this.state.input)\n        .then(response => {\n          this.displayFaceBox(this.calculateFaceLocation(response))\n          if(response) {\n          // TODO: Update Counter only when it is a different image\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              // This approach creates bugs as it creates new object with user object with just entries attribute\n              // this.setState({\n              //   user: {\n              //     entries: count\n              //   }\n              // })\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log);\n          }\n        })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signin' || route === 'register'){\n      this.setState(initialState)\n    } else if(route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n\n    this.setState({route});\n  }\n\n  render() {\n    return (\n      <Router className='App'> \n        <Route path=\"/\">\n          <Particles className='particles'\n            params={particlesOptions}\n          />\n          <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n          {/* TODO: Add Landing Page Code here */}\n          {\n            this.state.isSignedIn\n              ? \n                < Switch>\n                  <Redirect  from=\"/signin\" to=\"/dashboard\" />\n                  <Redirect  from=\"/register\" to=\"/dashboard\" />\n                  <Route className='App'\n                    path = \"/dashboard\"\n                    render={(props) => (\n                      <Dashboard {...props}\n                        name={this.state.user.name}\n                        entries={this.state.user.entries}\n                        onInputChange={this.onInputChange}\n                        onImageSubmit={this.onImageSubmit}\n                        getFileInput={this.getFileInput}\n                        // TODO: A quick Exercise: See how to use lifecycle methods to pass boxes[0], as initially the state is undefined\n                        // And the state comes only after the request is made.\n                        boxes={this.state.boxes}\n                        imageUrl={this.state.imageUrl}\n                      />\n                    )}/>\n                  </Switch>\n              : \n                <Switch>\n                  <Route \n                    path=\"/signin\"\n                    render={(props) => (    //Notice the rounded brackets instead of square brackets\n                      <Signin {...props} loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                    )}\n                  />\n                  <Route \n                    path=\"/register\"\n                    render={(props) => (\n                      <Register {...props} loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                      // <RegisterFormik {...props} loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                    )}\n                  />\n                </Switch>\n          }\n        </Route>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/serviceWorker.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/creds.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Register/RegisterFormik.js",["60"],"import React from 'react';\nimport { useFormik, withFormik } from 'formik';\n\n// // Yup can also be used for validation, check it once\n// // TODO: Add Asterisk for showing Required fields\n\n\n//  Start Here: https://formik.org/docs/api/formik#component-reactcomponenttypeformikpropsvalues\n//  See Component and Children\n\nconst validate = values => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = 'Required';\n    }\n  \n    if (!values.password) {\n      errors.password = 'Required';\n    } \n    // Minimum number of characters in a string validation can be added later\n    // else if (values.password.length > 8) {\n    //   errors.password = 'Must be 8 characters or less';\n    // }\n  \n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n  \n    return errors;\n  };\n\nconst RegisterFormik = () => {\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n        },\n        validate,\n        onSubmit: values => {\n\t\t\t\t\tfetch('http://localhost:3000/register', {\n\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\temail: values.email,\n\t\t\t\t\t\t\tpassword: values.password,\n\t\t\t\t\t\t\tname: values.name\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n            .then(response => response.json())\n            .then(user => {\n                // if(user) {\n                //     this.props.loadUser(user);\n                //     this.props.onRouteChange('home');\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\tconsole.log(user);\n            });\n\t\t\t\t\t\talert(JSON.stringify(values, null, 2));\n\t\t\t\t\t\tconsole.log('Submitiing Info');\n        },\n    });\n\n\t\treturn(\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t\t<div className=\"measure \">\n\t\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t\t\t\t<legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n\t\t\t\t\t\t\t\t<div className=\"mt3\">\n\t\t\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tname=\"name\"  \n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange} \n\t\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\tformik.touched.name && formik.errors.name \n\t\t\t\t\t\t\t\t\t\t? <label className=\"fw6 f6 i\" style={{color: \"#E0DF03\"}}>{formik.errors.name}</label> \n\t\t\t\t\t\t\t\t\t\t: null \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mt3\">\n\t\t\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\t\t\tname=\"email\"  \n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange} \n\t\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email \n\t\t\t\t\t\t\t\t\t\t? <label className=\"fw6 f6 i\" style={{color: \"#E0DF03\"}}>{formik.errors.email}</label> \n\t\t\t\t\t\t\t\t\t\t: null \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mv3\">\n\t\t\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t\t\t\t<input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\t\tname=\"password\"  \n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange} \n\t\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.password}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password \n\t\t\t\t\t\t\t\t\t\t? <label className=\"fw6 f6 i\" style={{color: \"#E0DF03\"}}>{formik.errors.password}</label> \n\t\t\t\t\t\t\t\t\t\t: null \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\t\t\t\t\t\tvalue=\"Register\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t);\n}\n\nexport default RegisterFormik;","/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Dashboard/Dashboard.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Register/Register.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Signin/Signin.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Navigation/Navigation.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Rank/Rank.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/Logo/Logo.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/FaceRecognition/FaceRecognition.js",[],"/home/versilio/VERSILIO/Techworks/Web Development/The complete Web Developer in 2020_ Zero to Mastery/smart-brains/src/components/ImageLinkForm/ImageLinkForm.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":8,"nodeType":"67","messageId":"68","endLine":16,"endColumn":22},{"ruleId":"65","severity":1,"message":"69","line":2,"column":21,"nodeType":"67","messageId":"68","endLine":2,"endColumn":31},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'RegisterFormik' is defined but never used.","Identifier","unusedVar","'withFormik' is defined but never used.","no-global-assign","no-unsafe-negation"]